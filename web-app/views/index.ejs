<!DOCTYPE html>
<html lang="pt">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Reddit Search</title>
  <style>
    * {
      box-sizing: border-box;
    }

    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background: #f4f4f4;
      margin: 0;
      padding: 0;
      display: flex;
      justify-content: center;
      align-items: flex-start;
      min-height: 100vh;
      padding-top: 2rem;
    }

    .container {
      background: white;
      padding: 2rem;
      border-radius: 12px;
      box-shadow: 0 0 15px rgba(0,0,0,0.1);
      width: 100%;
      max-width: 600px;
    }

    h1 {
      text-align: center;
      margin-bottom: 1.5rem;
      font-size: 1.5rem;
      color: #333;
    }

    form {
      display: flex;
      flex-direction: column;
      gap: 1rem;
    }

    label {
      font-weight: bold;
      margin-bottom: 0.25rem;
      color: #555;
    }

    input[type="text"],
    input[type="number"],
    select {
      padding: 0.5rem;
      border: 1px solid #ccc;
      border-radius: 8px;
      font-size: 1rem;
    }

    button {
      padding: 0.75rem;
      background-color: #ff4500;
      color: white;
      border: none;
      border-radius: 8px;
      font-size: 1rem;
      cursor: pointer;
      transition: background-color 0.3s ease;
    }

    button:hover {
      background-color: #e03e00;
    }

    .results {
      margin-top: 2rem;
    }

    .post {
      border-bottom: 1px solid #ddd;
      padding: 1rem 0;
    }

    .post:last-child {
      border-bottom: none;
    }

    .post h2 {
      margin: 0 0 0.5rem;
      font-size: 1.1rem;
      color: #333;
    }

    .post p {
      margin: 0.25rem 0;
      color: #555;
      white-space: pre-wrap;
    }

    .error {
      color: red;
      margin-top: 1rem;
      text-align: center;
    }
  </style>
</head>
<body>
  <div class="container">
    <h1>Buscar no Reddit</h1>
    <form id="reddit-form">
      <div>
        <label for="subreddit">Subreddit</label>
        <input type="text" id="subreddit" name="subreddit" placeholder="ex: javascript" required />
      </div>

      <div>
        <label for="sort">Ordenar por</label>
        <select id="sort" name="sort">
          <option value="new">New</option>
          <option value="hot">Hot</option>
          <option value="top">Top</option>
          <option value="rising">Rising</option>
          <option value="controversial">Controversial</option>
        </select>
      </div>

      <div>
        <label for="num">NÃºmero de resultados</label>
        <input
          type="number"
          id="num"
          name="num"
          min="1"
          max="100"
          value="10"
          required
        />
      </div>

      <button type="submit">Buscar</button>
    </form>

    <div id="results" class="results"></div>
    <div id="error" class="error"></div>
  </div>

  <script>
    document.getElementById('reddit-form').addEventListener('submit', async function(e) {
      e.preventDefault();

      const subreddit = document.getElementById('subreddit').value.trim();
      const sort = document.getElementById('sort').value;
      const num = document.getElementById('num').value;

      const resultsEl = document.getElementById('results');
      const errorEl = document.getElementById('error');
      resultsEl.innerHTML = '';
      errorEl.textContent = '';

      if (!subreddit) {
        errorEl.textContent = "Por favor, informe um subreddit.";
        return;
      }

      const url = new URL('https://function-miniprojeto.azurewebsites.net/api/httpTrigger');
      url.searchParams.set('subreddit', subreddit);
      url.searchParams.set('sort', sort);
      url.searchParams.set('num', num);

      try {
        const resp = await fetch(url.toString(), { method: 'GET' });
        if (!resp.ok) {
          const msg = await resp.text();
          throw new Error(msg || `Erro ${resp.status}`);
        }
        const text = await resp.text();
        const entries = text.trim().split('\n\n').filter(Boolean);

        if (entries.length === 0) {
          resultsEl.innerHTML = '<p>Nenhum post encontrado.</p>';
          return;
        }

        for (const entry of entries) {
          const lines = entry.split('\n');
          const subredditLine = lines.find(l => l.startsWith('Subreddit:')) || '';
          const titleLine = lines.find(l => l.startsWith('Title:')) || '';
          const textLine = lines.find(l => l.startsWith('Text:')) || '';

          const div = document.createElement('div');
          div.className = 'post';
          div.innerHTML = `
            <h2>${titleLine.replace(/^Title:\s*/, '')}</h2>
            <p><strong>Subreddit:</strong> ${subredditLine.replace(/^Subreddit:\s*/, '')}</p>
            <p>${textLine.replace(/^Text:\s*/, '') || '<em>(sem texto)</em>'}</p>
          `;
          resultsEl.appendChild(div);
        }
      } catch (err) {
        console.error(err);
        errorEl.textContent = 'Erro ao buscar posts: ' + err.message;
      }
    });
  </script>
</body>
</html>
